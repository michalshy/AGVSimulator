import math
# -*- coding: utf-8 -*-
"""Globals module

Does not contain any classes nor methods.
Responsible only for maintainance of variables and constants with global scope.
"""

#SCREEN
SCREEN_WIDTH = 1600
SCREEN_HEIGHT = 800

#SIMULATION
SIMULATION_RX_CYCLE = 500
SIMULATION_TX_CYCLE = 500

#AGV
AGV_SIZE = 10
AGV_TURN_TOLERANCE = 15
def Degrees(x):
    return math.degrees(x)

#ROOM
ROOM_WIDTH = 1000
ROOM_HEIGHT = 600
ROOM_W_OFFSET = (SCREEN_WIDTH - ROOM_WIDTH)/2
ROOM_H_OFFSET = (SCREEN_HEIGHT- ROOM_HEIGHT)/2
STARTING_POS_X = 40
STARTING_POS_Y = 18

#NAVIGATION
MIN_X = 29
MAX_X = 44
MIN_Y = 10
MAX_Y = 27

INTERPOLATION_MATRIX_X = [[MIN_X, 0], [MAX_X, ROOM_WIDTH]]
INTERPOLATION_MATRIX_Y = [[MIN_Y, 0], [MAX_Y, ROOM_HEIGHT]]

def PointsInterpolationWidth(x):
    output = INTERPOLATION_MATRIX_X[0][1] + (x - INTERPOLATION_MATRIX_X[0][0]) \
    * ((INTERPOLATION_MATRIX_X[1][1] - INTERPOLATION_MATRIX_X[0][1]) / \
       (INTERPOLATION_MATRIX_X[1][0] - INTERPOLATION_MATRIX_X[0][0]))
    return output

def PointsInterpolationHeight(y):
    output = INTERPOLATION_MATRIX_Y[0][1] + (y - INTERPOLATION_MATRIX_Y[0][0]) \
    * ((INTERPOLATION_MATRIX_Y[1][1] - INTERPOLATION_MATRIX_Y[0][1]) / \
       (INTERPOLATION_MATRIX_Y[1][0] - INTERPOLATION_MATRIX_Y[0][0]))
    return output

#COLORS
BLACK = (0,0,0)
WHITE = (255,255,255)
GREEN = (0,255,0)
RED = (255,0,0)

#PHYSICS
ROTATE_VAL = 100

#INFO_WINDOW
INFO_WINDOW_POSX = SCREEN_WIDTH - 275
INFO_WINDOW_POSY = SCREEN_HEIGHT - 175
INFO_WINDOW_SIZEX = 250 
INFO_WINDOW_SIZEY = 150
INFO_PADDING = 40
INFO_BORDER = 20